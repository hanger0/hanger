<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="Data">
	<typeAlias alias="relation" type="com.hanger.user.vo.RelationVo"/>
	<typeAlias alias="user" type="com.hanger.user.vo.UserVo"/>
	
	<insert id="insertRelation" parameterClass="HashMap">
		INSERT INTO RELATION(RELATION_FOLLOWER, RELATION_FOLLOWING, REG_ID, REG_DATE, REG_IP, UPD_ID, UPD_DATE, UPD_IP)
		VALUES(#myUserCode#, #userCode#, #myUserId#, sysdate(), #ip#, #myUserId#, sysdate(), #ip#);
	</insert>
	
	<delete id="deleteRelation" parameterClass="relation">
		DELETE FROM RELATION 
		WHERE RELATION_FOLLOWER = #relationFollower# AND RELATION_FOLLOWING = #relationFollowing#	
	</delete>
	
	<select id="selectFollowingRelation" parameterClass="HashMap" resultClass="user">
		SELECT yourFollowingList.*, myRelation.RELATION_FOLLOWING as followYn   
		from (SELECT user.USER_CODE as userCode, user.USER_ID as userId, user.USER_NAME as userName, 
		user.USER_PIC_PATH as userPicPath, user.USER_PIC_SAVE_NAME as userPicSaveName, 
		user.USER_SKINTYPE as userSkinType, user.USER_SKINTONE as userSkinTone, count(review.POSTING_CODE) as postingCount, 
		count(relation1.RELATION_FOLLOWER) as followerCount
		FROM USER user, RELATION relation,
		USER user1 left join (SELECT POSTING_CODE, USER_CODE FROM REVIEW WHERE REVIEW_USE_YN='Y') review
		on user1.USER_CODE = review.USER_CODE,
		USER user2 left join RELATION relation1 on (user2.USER_CODE=relation1.RELATION_FOLLOWING AND NOT relation1.RELATION_FOLLOWER = user2.USER_CODE)
		WHERE user.USER_USE_YN='Y' AND NOT user.USER_CODE=#yourUserCode# AND user.USER_CODE = relation.RELATION_FOLLOWING 
		AND relation.RELATION_FOLLOWER = #yourUserCode#
		AND user.USER_CODE = user1.USER_CODE AND user.USER_CODE = user2.USER_CODE
		GROUP BY user.USER_CODE, user.USER_ID, user.USER_NAME, user.USER_PIC_PATH, user.USER_PIC_SAVE_NAME, 
		user.USER_SKINTYPE, user.USER_SKINTONE) yourFollowingList left join RELATION myRelation 
		on (yourFollowingList.userCode=myRelation.RELATION_FOLLOWING AND myRelation.RELATION_FOLLOWER=#myUserCode#);
	</select>
	
	<select id="selectFollowerRelation" parameterClass="HashMap" resultClass="user">
		SELECT yourFollowingList.*, myRelation.RELATION_FOLLOWING as followYn   
		from (SELECT user.USER_CODE as userCode, user.USER_ID as userId, user.USER_NAME as userName, 
		user.USER_PIC_PATH as userPicPath, user.USER_PIC_SAVE_NAME as userPicSaveName, 
		user.USER_SKINTYPE as userSkinType, user.USER_SKINTONE as userSkinTone, count(review.POSTING_CODE) as postingCount, 
		count(relation1.RELATION_FOLLOWER) as followerCount
		FROM USER user, RELATION relation,
		USER user1 left join (SELECT POSTING_CODE, USER_CODE FROM REVIEW WHERE REVIEW_USE_YN='Y') review
		on user1.USER_CODE = review.USER_CODE,
		USER user2 left join RELATION relation1 on (user2.USER_CODE=relation1.RELATION_FOLLOWING AND NOT relation1.RELATION_FOLLOWER = user2.USER_CODE)
		WHERE user.USER_USE_YN='Y' AND NOT user.USER_CODE=#yourUserCode# AND user.USER_CODE = relation.RELATION_FOLLOWER 
		AND relation.RELATION_FOLLOWING = #yourUserCode#
		AND user.USER_CODE = user1.USER_CODE AND user.USER_CODE = user2.USER_CODE
		GROUP BY user.USER_CODE, user.USER_ID, user.USER_NAME, user.USER_PIC_PATH, user.USER_PIC_SAVE_NAME, 
		user.USER_SKINTYPE, user.USER_SKINTONE) yourFollowingList left join RELATION myRelation 
		on (yourFollowingList.userCode=myRelation.RELATION_FOLLOWING AND myRelation.RELATION_FOLLOWER=#myUserCode#);
	</select>
</sqlMap>
